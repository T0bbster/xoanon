module xoanon.system.graphics.hardware.gl.GL3functions;

import tango.stdc.stringz;
import derelict.util.exception;
import derelict.util.loader;
import xoanon.system.graphics.hardware.gl.GL3types;
import xoanon.system.graphics.hardware.gl.WGL;

SharedLib slib;

public void loadGL3(SharedLib lib)
{
	slib = lib;
	//OpenGL 1.0/1.1
	bindFunc(glCullFace)("glCullFace", lib);
	bindFunc(glFrontFace)("glFrontFace", lib);
	bindFunc(glHint)("glHint", lib);
	bindFunc(glLineWidth)("glLineWidth", lib);
	bindFunc(glPointSize)("glPointSize", lib);
	bindFunc(glPolygonMode)("glPolygonMode", lib);
	bindFunc(glScissor)("glScissor", lib);
	bindFunc(glTexParameterf)("glTexParameterf", lib);
	bindFunc(glTexParameterfv)("glTexParameterfv", lib);
	bindFunc(glTexParameteri)("glTexParameteri", lib);
	bindFunc(glTexParameteriv)("glTexParameteriv", lib);
	bindFunc(glTexImage1D)("glTexImage1D", lib);
	bindFunc(glTexImage2D)("glTexImage2D", lib);
	bindFunc(glDrawBuffer)("glDrawBuffer", lib);
	bindFunc(glClear)("glClear", lib);
	bindFunc(glClearColor)("glClearColor", lib);
	bindFunc(glClearStencil)("glClearStencil", lib);
	bindFunc(glClearDepth)("glClearDepth", lib);
	bindFunc(glStencilMask)("glStencilMask", lib);
	bindFunc(glColorMask)("glColorMask", lib);
	bindFunc(glDepthMask)("glDepthMask", lib);
	bindFunc(glDisable)("glDisable", lib);
	bindFunc(glEnable)("glEnable", lib);
	bindFunc(glFinish)("glFinish", lib);
	bindFunc(glFlush)("glFlush", lib);
	bindFunc(glBlendFunc)("glBlendFunc", lib);
	bindFunc(glLogicOp)("glLogicOp", lib);
	bindFunc(glStencilFunc)("glStencilFunc", lib);
	bindFunc(glStencilOp)("glStencilOp", lib);
	bindFunc(glDepthFunc)("glDepthFunc", lib);
	bindFunc(glPixelStoref)("glPixelStoref", lib);
	bindFunc(glPixelStorei)("glPixelStorei", lib);
	bindFunc(glReadBuffer)("glReadBuffer", lib);
	bindFunc(glReadPixels)("glReadPixels", lib);
	bindFunc(glGetBooleanv)("glGetBooleanv", lib);
	bindFunc(glGetDoublev)("glGetDoublev", lib);
	bindFunc(glGetError)("glGetError", lib);
	bindFunc(glGetFloatv)("glGetFloatv", lib);
	bindFunc(glGetIntegerv)("glGetIntegerv", lib);
	bindFunc(glGetString)("glGetString", lib);
	bindFunc(glGetTexImage)("glGetTexImage", lib);
	bindFunc(glGetTexParameterfv)("glGetTexParameterfv", lib);
	bindFunc(glGetTexParameteriv)("glGetTexParameteriv", lib);
	bindFunc(glGetTexLevelParameterfv)("glGetTexLevelParameterfv", lib);
	bindFunc(glGetTexLevelParameteriv)("glGetTexLevelParameteriv", lib);
	bindFunc(glIsEnabled)("glIsEnabled", lib);
	bindFunc(glDepthRange)("glDepthRange", lib);
	bindFunc(glViewport)("glViewport", lib);
	bindFunc(glDrawArrays)("glDrawArrays", lib);
	bindFunc(glDrawElements)("glDrawElements", lib);
	bindFunc(glGetPointerv)("glGetPointerv", lib);
	bindFunc(glPolygonOffset)("glPolygonOffset", lib);
	bindFunc(glCopyTexImage1D)("glCopyTexImage1D", lib);
	bindFunc(glCopyTexImage2D)("glCopyTexImage2D", lib);
	bindFunc(glCopyTexSubImage1D)("glCopyTexSubImage1D", lib);
	bindFunc(glCopyTexSubImage2D)("glCopyTexSubImage2D", lib);
	bindFunc(glTexSubImage1D)("glTexSubImage1D", lib);
	bindFunc(glTexSubImage2D)("glTexSubImage2D", lib);
	bindFunc(glBindTexture)("glBindTexture", lib);
	bindFunc(glDeleteTextures)("glDeleteTextures", lib);
	bindFunc(glGenTextures)("glGenTextures", lib);
	bindFunc(glIsTexture)("glIsTexture", lib);
	//other
	
}

void bindExtFunc(T)(T proc, char[] name, SharedLib lib)
{
	version(Windows)
	{
		wglBindFunc(cast(void**) &proc, name, lib);
	}
	else
	{
		bindFunc(proc)(name, lib);
	}
}

/+
package struct ExtBinder(T) 
{
    void opCall(char[] n, SharedLib lib) 
    {
    	version(Windows)
    	{
    		void* func = wglGetProcAddress(toStringz(n));
            if(!func)
                Derelict_HandleMissingProc(lib.name, n);
            else
                *fptr = func;
    	}
    	else
    	{
    		*fptr = Derelict_GetProc(lib, n);
    	}
    }
    
    private 
    {
        void** fptr;
    }
}


template bindExtFunc(T) 
{
	ExtBinder!(T) bindExtFunc(inout T a) 
    {
		ExtBinder!(T) res;
        res.fptr = cast(void**)&a;
        return res;
    }
}
+/

package void loadExtensions()
{
	SharedLib lib = slib;
	
	wglBindFunc(cast(void**) &glBlendColor, "glBlendColor", lib);
	wglBindFunc(cast(void**) &glBlendEquation, "glBlendEquation", lib);
	wglBindFunc(cast(void**) &glDrawRangeElements, "glDrawRangeElements", lib);
	wglBindFunc(cast(void**) &glTexImage3D, "glTexImage3D", lib);
	wglBindFunc(cast(void**) &glTexSubImage3D, "glTexSubImage3D", lib);
	wglBindFunc(cast(void**) &glCopyTexSubImage3D, "glCopyTexSubImage3D", lib);
	wglBindFunc(cast(void**) &glActiveTexture, "glActiveTexture", lib);
	wglBindFunc(cast(void**) &glSampleCoverage, "glSampleCoverage", lib);
	wglBindFunc(cast(void**) &glCompressedTexImage3D, "glCompressedTexImage3D", lib);
	wglBindFunc(cast(void**) &glCompressedTexImage2D, "glCompressedTexImage2D", lib);
	wglBindFunc(cast(void**) &glCompressedTexImage1D, "glCompressedTexImage1D", lib);
	wglBindFunc(cast(void**) &glCompressedTexSubImage3D, "glCompressedTexSubImage3D", lib);
	wglBindFunc(cast(void**) &glCompressedTexSubImage2D, "glCompressedTexSubImage2D", lib);
	wglBindFunc(cast(void**) &glCompressedTexSubImage1D, "glCompressedTexSubImage1D", lib);
	wglBindFunc(cast(void**) &glGetCompressedTexImage, "glGetCompressedTexImage", lib);
	wglBindFunc(cast(void**) &glBlendFuncSeparate, "glBlendFuncSeparate", lib);
	wglBindFunc(cast(void**) &glMultiDrawArrays, "glMultiDrawArrays", lib);
	wglBindFunc(cast(void**) &glMultiDrawElements, "glMultiDrawElements", lib);
	wglBindFunc(cast(void**) &glPointParameterf, "glPointParameterf", lib);
	wglBindFunc(cast(void**) &glPointParameterfv, "glPointParameterfv", lib);
	wglBindFunc(cast(void**) &glPointParameteri, "glPointParameteri", lib);
	wglBindFunc(cast(void**) &glPointParameteriv, "glPointParameteriv", lib);
	wglBindFunc(cast(void**) &glGenQueries, "glGenQueries", lib);
	wglBindFunc(cast(void**) &glDeleteQueries, "glDeleteQueries", lib);
	wglBindFunc(cast(void**) &glIsQuery, "glIsQuery", lib);
	wglBindFunc(cast(void**) &glBeginQuery, "glBeginQuery", lib);
	wglBindFunc(cast(void**) &glEndQuery, "glEndQuery", lib);
	wglBindFunc(cast(void**) &glGetQueryiv, "glGetQueryiv", lib);
	wglBindFunc(cast(void**) &glGetQueryObjectiv, "glGetQueryObjectiv", lib);
	wglBindFunc(cast(void**) &glGetQueryObjectuiv, "glGetQueryObjectuiv", lib);
	wglBindFunc(cast(void**) &glBindBuffer, "glBindBuffer", lib);
	wglBindFunc(cast(void**) &glDeleteBuffers, "glDeleteBuffers", lib);
	wglBindFunc(cast(void**) &glGenBuffers, "glGenBuffers", lib);
	wglBindFunc(cast(void**) &glIsBuffer, "glIsBuffer", lib);
	wglBindFunc(cast(void**) &glBufferData, "glBufferData", lib);
	wglBindFunc(cast(void**) &glBufferSubData, "glBufferSubData", lib);
	wglBindFunc(cast(void**) &glGetBufferSubData, "glGetBufferSubData", lib);
	wglBindFunc(cast(void**) &glMapBuffer, "glMapBuffer", lib);
	wglBindFunc(cast(void**) &glUnmapBuffer, "glUnmapBuffer", lib);
	wglBindFunc(cast(void**) &glGetBufferParameteriv, "glGetBufferParameteriv", lib);
	wglBindFunc(cast(void**) &glGetBufferPointerv, "glGetBufferPointerv", lib);
	wglBindFunc(cast(void**) &glBlendEquationSeparate, "glBlendEquationSeparate", lib);
	wglBindFunc(cast(void**) &glDrawBuffers, "glDrawBuffers", lib);
	wglBindFunc(cast(void**) &glStencilOpSeparate, "glStencilOpSeparate", lib);
	wglBindFunc(cast(void**) &glStencilFuncSeparate, "glStencilFuncSeparate", lib);
	wglBindFunc(cast(void**) &glStencilMaskSeparate, "glStencilMaskSeparate", lib);
	wglBindFunc(cast(void**) &glAttachShader, "glAttachShader", lib);
	wglBindFunc(cast(void**) &glBindAttribLocation, "glBindAttribLocation", lib);
	wglBindFunc(cast(void**) &glCompileShader, "glCompileShader", lib);
	wglBindFunc(cast(void**) &glCreateProgram, "glCreateProgram", lib);
	wglBindFunc(cast(void**) &glCreateShader, "glCreateShader", lib);
	wglBindFunc(cast(void**) &glDeleteProgram, "glDeleteProgram", lib);
	wglBindFunc(cast(void**) &glDeleteShader, "glDeleteShader", lib);
	wglBindFunc(cast(void**) &glDetachShader, "glDetachShader", lib);
	wglBindFunc(cast(void**) &glDisableVertexAttribArray, "glDisableVertexAttribArray", lib);
	wglBindFunc(cast(void**) &glEnableVertexAttribArray, "glEnableVertexAttribArray", lib);
	wglBindFunc(cast(void**) &glGetActiveAttrib, "glGetActiveAttrib", lib);
	wglBindFunc(cast(void**) &glGetActiveUniform, "glGetActiveUniform", lib);
	wglBindFunc(cast(void**) &glGetAttachedShaders, "glGetAttachedShaders", lib);
	wglBindFunc(cast(void**) &glGetAttribLocation, "glGetAttribLocation", lib);
	wglBindFunc(cast(void**) &glGetProgramiv, "glGetProgramiv", lib);
	wglBindFunc(cast(void**) &glGetProgramInfoLog, "glGetProgramInfoLog", lib);
	wglBindFunc(cast(void**) &glGetShaderiv, "glGetShaderiv", lib);
	wglBindFunc(cast(void**) &glGetShaderInfoLog, "glGetShaderInfoLog", lib);
	wglBindFunc(cast(void**) &glGetShaderSource, "glGetShaderSource", lib);
	wglBindFunc(cast(void**) &glGetUniformLocation, "glGetUniformLocation", lib);
	wglBindFunc(cast(void**) &glGetUniformfv, "glGetUniformfv", lib);
	wglBindFunc(cast(void**) &glGetUniformiv, "glGetUniformiv", lib);
	wglBindFunc(cast(void**) &glGetVertexAttribdv, "glGetVertexAttribdv", lib);
	wglBindFunc(cast(void**) &glGetVertexAttribfv, "glGetVertexAttribfv", lib);
	wglBindFunc(cast(void**) &glGetVertexAttribiv, "glGetVertexAttribiv", lib);
	wglBindFunc(cast(void**) &glGetVertexAttribPointerv, "glGetVertexAttribPointerv", lib);
	wglBindFunc(cast(void**) &glIsProgram, "glIsProgram", lib);
	wglBindFunc(cast(void**) &glIsShader, "glIsShader", lib);
	wglBindFunc(cast(void**) &glLinkProgram, "glLinkProgram", lib);
	wglBindFunc(cast(void**) &glShaderSource, "glShaderSource", lib);
	wglBindFunc(cast(void**) &glUseProgram, "glUseProgram", lib);
	wglBindFunc(cast(void**) &glUniform1f, "glUniform1f", lib);
	wglBindFunc(cast(void**) &glUniform2f, "glUniform2f", lib);
	wglBindFunc(cast(void**) &glUniform3f, "glUniform3f", lib);
	wglBindFunc(cast(void**) &glUniform4f, "glUniform4f", lib);
	wglBindFunc(cast(void**) &glUniform1i, "glUniform1i", lib);
	wglBindFunc(cast(void**) &glUniform2i, "glUniform2i", lib);
	wglBindFunc(cast(void**) &glUniform3i, "glUniform3i", lib);
	wglBindFunc(cast(void**) &glUniform4i, "glUniform4i", lib);
	wglBindFunc(cast(void**) &glUniform1fv, "glUniform1fv", lib);
	wglBindFunc(cast(void**) &glUniform2fv, "glUniform2fv", lib);
	wglBindFunc(cast(void**) &glUniform3fv, "glUniform3fv", lib);
	wglBindFunc(cast(void**) &glUniform4fv, "glUniform4fv", lib);
	wglBindFunc(cast(void**) &glUniform1iv, "glUniform1iv", lib);
	wglBindFunc(cast(void**) &glUniform2iv, "glUniform2iv", lib);
	wglBindFunc(cast(void**) &glUniform3iv, "glUniform3iv", lib);
	wglBindFunc(cast(void**) &glUniform4iv, "glUniform4iv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix2fv, "glUniformMatrix2fv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix3fv, "glUniformMatrix3fv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix4fv, "glUniformMatrix4fv", lib);
	wglBindFunc(cast(void**) &glValidateProgram, "glValidateProgram", lib);
	wglBindFunc(cast(void**) &glVertexAttrib1d, "glVertexAttrib1d", lib);
	wglBindFunc(cast(void**) &glVertexAttrib1dv, "glVertexAttrib1dv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib1f, "glVertexAttrib1f", lib);
	wglBindFunc(cast(void**) &glVertexAttrib1fv, "glVertexAttrib1fv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib1s, "glVertexAttrib1s", lib);
	wglBindFunc(cast(void**) &glVertexAttrib1sv, "glVertexAttrib1sv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib2d, "glVertexAttrib2d", lib);
	wglBindFunc(cast(void**) &glVertexAttrib2dv, "glVertexAttrib2dv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib2f, "glVertexAttrib2f", lib);
	wglBindFunc(cast(void**) &glVertexAttrib2fv, "glVertexAttrib2fv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib2s, "glVertexAttrib2s", lib);
	wglBindFunc(cast(void**) &glVertexAttrib2sv, "glVertexAttrib2sv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib3d, "glVertexAttrib3d", lib);
	wglBindFunc(cast(void**) &glVertexAttrib3dv, "glVertexAttrib3dv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib3f, "glVertexAttrib3f", lib);
	wglBindFunc(cast(void**) &glVertexAttrib3fv, "glVertexAttrib3fv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib3s, "glVertexAttrib3s", lib);
	wglBindFunc(cast(void**) &glVertexAttrib3sv, "glVertexAttrib3sv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4Nbv, "glVertexAttrib4Nbv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4Niv, "glVertexAttrib4Niv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4Nsv, "glVertexAttrib4Nsv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4Nub, "glVertexAttrib4Nub", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4Nubv, "glVertexAttrib4Nubv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4Nuiv, "glVertexAttrib4Nuiv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4Nusv, "glVertexAttrib4Nusv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4bv, "glVertexAttrib4bv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4d, "glVertexAttrib4d", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4dv, "glVertexAttrib4dv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4f, "glVertexAttrib4f", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4fv, "glVertexAttrib4fv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4iv, "glVertexAttrib4iv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4s, "glVertexAttrib4s", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4sv, "glVertexAttrib4sv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4ubv, "glVertexAttrib4ubv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4uiv, "glVertexAttrib4uiv", lib);
	wglBindFunc(cast(void**) &glVertexAttrib4usv, "glVertexAttrib4usv", lib);
	wglBindFunc(cast(void**) &glVertexAttribPointer, "glVertexAttribPointer", lib);
	/+ /* GL3 */
	wglBindFunc(cast(void**) &glUniformMatrix2x3fv, "glUniformMatrix2x3fv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix3x2fv, "glUniformMatrix3x2fv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix2x4fv, "glUniformMatrix2x4fv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix4x2fv, "glUniformMatrix4x2fv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix3x4fv, "glUniformMatrix3x4fv", lib);
	wglBindFunc(cast(void**) &glUniformMatrix4x3fv, "glUniformMatrix4x3fv", lib);
	wglBindFunc(cast(void**) &glColorMaski, "glColorMaski", lib);
	wglBindFunc(cast(void**) &glGetBooleani_v, "glGetBooleani_v", lib);
	wglBindFunc(cast(void**) &glGetIntegeri_v, "glGetIntegeri_v", lib);
	wglBindFunc(cast(void**) &glEnablei, "glEnablei", lib);
	wglBindFunc(cast(void**) &glDisablei, "glDisablei", lib);
	wglBindFunc(cast(void**) &glIsEnabledi, "glIsEnabledi", lib);
	wglBindFunc(cast(void**) &glBeginTransformFeedback, "glBeginTransformFeedback", lib);
	wglBindFunc(cast(void**) &glEndTransformFeedback, "glEndTransformFeedback", lib);
	wglBindFunc(cast(void**) &glBindBufferRange, "glBindBufferRange", lib);
	wglBindFunc(cast(void**) &glBindBufferBase, "glBindBufferBase", lib);
	wglBindFunc(cast(void**) &glTransformFeedbackVaryings, "glTransformFeedbackVaryings", lib);
	wglBindFunc(cast(void**) &glGetTransformFeedbackVarying, "glGetTransformFeedbackVarying", lib);
	wglBindFunc(cast(void**) &glClampColor, "glClampColor", lib);
	wglBindFunc(cast(void**) &glBeginConditionalRender, "glBeginConditionalRender", lib);
	wglBindFunc(cast(void**) &glEndConditionalRender, "glEndConditionalRender", lib);
	wglBindFunc(cast(void**) &glVertexAttribIPointer, "glVertexAttribIPointer", lib);
	wglBindFunc(cast(void**) &glGetVertexAttribIiv, "glGetVertexAttribIiv", lib);
	wglBindFunc(cast(void**) &glGetVertexAttribIuiv, "glGetVertexAttribIuiv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI1i, "glVertexAttribI1i", lib);
	wglBindFunc(cast(void**) &glVertexAttribI2i, "glVertexAttribI2i", lib);
	wglBindFunc(cast(void**) &glVertexAttribI3i, "glVertexAttribI3i", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4i, "glVertexAttribI4i", lib);
	wglBindFunc(cast(void**) &glVertexAttribI1ui, "glVertexAttribI1ui", lib);
	wglBindFunc(cast(void**) &glVertexAttribI2ui, "glVertexAttribI2ui", lib);
	wglBindFunc(cast(void**) &glVertexAttribI3ui, "glVertexAttribI3ui", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4ui, "glVertexAttribI4ui", lib);
	wglBindFunc(cast(void**) &glVertexAttribI1iv, "glVertexAttribI1iv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI2iv, "glVertexAttribI2iv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI3iv, "glVertexAttribI3iv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4iv, "glVertexAttribI4iv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI1uiv, "glVertexAttribI1uiv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI2uiv, "glVertexAttribI2uiv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI3uiv, "glVertexAttribI3uiv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4uiv, "glVertexAttribI4uiv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4bv, "glVertexAttribI4bv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4sv, "glVertexAttribI4sv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4ubv, "glVertexAttribI4ubv", lib);
	wglBindFunc(cast(void**) &glVertexAttribI4usv, "glVertexAttribI4usv", lib);
	wglBindFunc(cast(void**) &glGetUniformuiv, "glGetUniformuiv", lib);
	wglBindFunc(cast(void**) &glBindFragDataLocation, "glBindFragDataLocation", lib);
	wglBindFunc(cast(void**) &glGetFragDataLocation, "glGetFragDataLocation", lib);
	wglBindFunc(cast(void**) &glUniform1ui, "glUniform1ui", lib);
	wglBindFunc(cast(void**) &glUniform2ui, "glUniform2ui", lib);
	wglBindFunc(cast(void**) &glUniform3ui, "glUniform3ui", lib);
	wglBindFunc(cast(void**) &glUniform4ui, "glUniform4ui", lib);
	wglBindFunc(cast(void**) &glUniform1uiv, "glUniform1uiv", lib);
	wglBindFunc(cast(void**) &glUniform2uiv, "glUniform2uiv", lib);
	wglBindFunc(cast(void**) &glUniform3uiv, "glUniform3uiv", lib);
	wglBindFunc(cast(void**) &glUniform4uiv, "glUniform4uiv", lib);
	wglBindFunc(cast(void**) &glTexParameterIiv, "glTexParameterIiv", lib);
	wglBindFunc(cast(void**) &glTexParameterIuiv, "glTexParameterIuiv", lib);
	wglBindFunc(cast(void**) &glGetTexParameterIiv, "glGetTexParameterIiv", lib);
	wglBindFunc(cast(void**) &glGetTexParameterIuiv, "glGetTexParameterIuiv", lib);
	wglBindFunc(cast(void**) &glClearBufferiv, "glClearBufferiv", lib);
	wglBindFunc(cast(void**) &glClearBufferuiv, "glClearBufferuiv", lib);
	wglBindFunc(cast(void**) &glClearBufferfv, "glClearBufferfv", lib);
	wglBindFunc(cast(void**) &glClearBufferfi, "glClearBufferfi", lib);
	wglBindFunc(cast(void**) &glGetStringi, "glGetStringi", lib);
	/*GL3.1*/ 	
	wglBindFunc(cast(void**) &glDrawArraysInstanced, "glDrawArraysInstanced", lib);
	wglBindFunc(cast(void**) &glDrawElementsInstanced, "glDrawElementsInstanced", lib);
	wglBindFunc(cast(void**) &glTexBuffer, "glTexBuffer", lib);
	wglBindFunc(cast(void**) &glPrimitiveRestartIndex, "glPrimitiveRestartIndex", lib);
	//wglBindFunc(cast(void**) &glGetInteger64i_v, "glGetInteger64i_v", lib);
	wglBindFunc(cast(void**) &glGetBufferParameteri64v, "glGetBufferParameteri64v", lib);
	//wglBindFunc(cast(void**) &glProgramParameteri, "glProgramParameteri", lib);
	wglBindFunc(cast(void**) &glFramebufferTexture, "glFramebufferTexture", lib);
	//wglBindFunc(cast(void**) &glFramebufferTextureFace, "glFramebufferTextureFace", lib);
	wglBindFunc(cast(void**) &glIsRenderbuffer, "glIsRenderbuffer", lib);
	wglBindFunc(cast(void**) &glBindRenderbuffer, "glBindRenderbuffer", lib);
	wglBindFunc(cast(void**) &glDeleteRenderbuffers, "glDeleteRenderbuffers", lib);
	wglBindFunc(cast(void**) &glGenRenderbuffers, "glGenRenderbuffers", lib);
	wglBindFunc(cast(void**) &glRenderbufferStorage, "glRenderbufferStorage", lib);
	wglBindFunc(cast(void**) &glGetRenderbufferParameteriv, "glGetRenderbufferParameteriv", lib);
	wglBindFunc(cast(void**) &glIsFramebuffer, "glIsFramebuffer", lib);
	wglBindFunc(cast(void**) &glBindFramebuffer, "glBindFramebuffer", lib);
	wglBindFunc(cast(void**) &glDeleteFramebuffers, "glDeleteFramebuffers", lib);
	wglBindFunc(cast(void**) &glGenFramebuffers, "glGenFramebuffers", lib);
	wglBindFunc(cast(void**) &glCheckFramebufferStatus, "glCheckFramebufferStatus", lib);
	wglBindFunc(cast(void**) &glFramebufferTexture1D, "glFramebufferTexture1D", lib);
	wglBindFunc(cast(void**) &glFramebufferTexture2D, "glFramebufferTexture2D", lib);
	wglBindFunc(cast(void**) &glFramebufferTexture3D, "glFramebufferTexture3D", lib);
	wglBindFunc(cast(void**) &glFramebufferRenderbuffer, "glFramebufferRenderbuffer", lib);
	wglBindFunc(cast(void**) &glGetFramebufferAttachmentParameteriv, "glGetFramebufferAttachmentParameteriv", lib);
	wglBindFunc(cast(void**) &glGenerateMipmap, "glGenerateMipmap", lib);
	wglBindFunc(cast(void**) &glBlitFramebuffer, "glBlitFramebuffer", lib);
	wglBindFunc(cast(void**) &glRenderbufferStorageMultisample, "glRenderbufferStorageMultisample", lib);
	wglBindFunc(cast(void**) &glFramebufferTextureLayer, "glFramebufferTextureLayer", lib);
	wglBindFunc(cast(void**) &glMapBufferRange, "glMapBufferRange", lib);
	wglBindFunc(cast(void**) &glFlushMappedBufferRange, "glFlushMappedBufferRange", lib);
	wglBindFunc(cast(void**) &glBindVertexArray, "glBindVertexArray", lib);
	wglBindFunc(cast(void**) &glDeleteVertexArrays, "glDeleteVertexArrays", lib);
	wglBindFunc(cast(void**) &glGenVertexArrays, "glGenVertexArrays", lib);
	wglBindFunc(cast(void**) &glIsVertexArray, "glIsVertexArray", lib);
	wglBindFunc(cast(void**) &glGetUniformIndices, "glGetUniformIndices", lib);
	wglBindFunc(cast(void**) &glGetActiveUniformsiv, "glGetActiveUniformsiv", lib);
	wglBindFunc(cast(void**) &glGetActiveUniformName, "glGetActiveUniformName", lib);
	wglBindFunc(cast(void**) &glGetUniformBlockIndex, "glGetUniformBlockIndex", lib);
	wglBindFunc(cast(void**) &glGetActiveUniformBlockiv, "glGetActiveUniformBlockiv", lib);
	wglBindFunc(cast(void**) &glGetActiveUniformBlockName, "glGetActiveUniformBlockName", lib);
	wglBindFunc(cast(void**) &glUniformBlockBinding, "glUniformBlockBinding", lib);
	wglBindFunc(cast(void**) &glCopyBufferSubData, "glCopyBufferSubData", lib);
	wglBindFunc(cast(void**) &glDrawElementsBaseVertex, "glDrawElementsBaseVertex", lib);
	wglBindFunc(cast(void**) &glDrawRangeElementsBaseVertex, "glDrawRangeElementsBaseVertex", lib);
	wglBindFunc(cast(void**) &glDrawElementsInstancedBaseVertex, "glDrawElementsInstancedBaseVertex", lib);
	wglBindFunc(cast(void**) &glMultiDrawElementsBaseVertex, "glMultiDrawElementsBaseVertex", lib);
	wglBindFunc(cast(void**) &glProvokingVertex, "glProvokingVertex", lib);
	wglBindFunc(cast(void**) &glFenceSync, "glFenceSync", lib);
	wglBindFunc(cast(void**) &glIsSync, "glIsSync", lib);
	wglBindFunc(cast(void**) &glDeleteSync, "glDeleteSync", lib);
	wglBindFunc(cast(void**) &glClientWaitSync, "glClientWaitSync", lib);
	wglBindFunc(cast(void**) &glWaitSync, "glWaitSync", lib);
	wglBindFunc(cast(void**) &glGetInteger64v, "glGetInteger64v", lib);
	wglBindFunc(cast(void**) &glGetSynciv, "glGetSynciv", lib);
	wglBindFunc(cast(void**) &glTexImage2DMultisample, "glTexImage2DMultisample", lib);
	wglBindFunc(cast(void**) &glTexImage3DMultisample, "glTexImage3DMultisample", lib);
	wglBindFunc(cast(void**) &glGetMultisamplefv, "glGetMultisamplefv", lib);
	wglBindFunc(cast(void**) &glSampleMaski, "glSampleMaski", lib);
	//wglBindFunc(cast(void**) &glBlendEquationi, "glBlendEquationi", lib);
	//wglBindFunc(cast(void**) &glBlendEquationSeparatei, "glBlendEquationSeparatei", lib);
	//wglBindFunc(cast(void**) &glBlendFunci, "glBlendFunci", lib);
	//wglBindFunc(cast(void**) &glBlendFuncSeparatei, "glBlendFuncSeparatei", lib);
	//wglBindFunc(cast(void**) &glMinSampleShading, "glMinSampleShading", lib);+/
}

extern(System)
{
	//OpenGL 1.0/1.1
	void function(GLenum mode) glCullFace;
	void function(GLenum mode) glFrontFace;
	void function(GLenum target, GLenum mode) glHint;
	void function(GLfloat width) glLineWidth;
	void function(GLfloat size) glPointSize;
	void function(GLenum face, GLenum mode) glPolygonMode;
	void function(GLint x, GLint y, GLsizei width, GLsizei height) glScissor;
	void function(GLenum target, GLenum pname, GLfloat param) glTexParameterf;
	void function(GLenum target, GLenum pname, GLfloat* params) glTexParameterfv;
	void function(GLenum target, GLenum pname, GLint param) glTexParameteri;
	void function(GLenum target, GLenum pname, GLint* params) glTexParameteriv;
	void function(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels) glTexImage1D;
	void function(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels) glTexImage2D;
	void function(GLenum mode) glDrawBuffer;
	void function(GLbitfield mask) glClear;
	void function(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) glClearColor;
	void function(GLint s) glClearStencil;
	void function(GLclampd depth) glClearDepth;
	void function(GLuint mask) glStencilMask;
	void function(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) glColorMask;
	void function(GLboolean flag) glDepthMask;
	void function(GLenum cap) glDisable;
	void function(GLenum cap) glEnable;
	void function() glFinish;
	void function() glFlush;
	void function(GLenum sfactor, GLenum dfactor) glBlendFunc;
	void function(GLenum opcode) glLogicOp;
	void function(GLenum func, GLint _ref, GLuint mask) glStencilFunc;
	void function(GLenum fail, GLenum zfail, GLenum zpass) glStencilOp;
	void function(GLenum func) glDepthFunc;
	void function(GLenum pname, GLfloat param) glPixelStoref;
	void function(GLenum pname, GLint param) glPixelStorei;
	void function(GLenum mode) glReadBuffer;
	void function(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels) glReadPixels;
	void function(GLenum pname, GLboolean *params) glGetBooleanv;
	void function(GLenum pname, GLdouble *params) glGetDoublev;
	GLenum function() glGetError;
	void function(GLenum pname, GLfloat *params) glGetFloatv;
	void function(GLenum pname, GLint* params) glGetIntegerv;
	GLubyte* function(GLenum name) glGetString;
	void function(GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels) glGetTexImage;
	void function(GLenum target, GLenum pname, GLfloat *params) glGetTexParameterfv;
	void function(GLenum target, GLenum pname, GLint* params) glGetTexParameteriv;
	void function(GLenum target, GLint level, GLenum pname, GLfloat *params) glGetTexLevelParameterfv;
	void function(GLenum target, GLint level, GLenum pname, GLint* params) glGetTexLevelParameteriv;
	GLboolean function(GLenum cap) glIsEnabled;
	void function(GLclampd , GLclampd ) glDepthRange;
	void function(GLint x, GLint y, GLsizei width, GLsizei height) glViewport;
	void function(GLenum mode, GLint first, GLsizei count) glDrawArrays;
	void function(GLenum mode, GLsizei count, GLenum type, GLvoid* indices) glDrawElements;
	void function(GLenum pname, GLvoid* *params) glGetPointerv;
	void function(GLfloat factor, GLfloat units) glPolygonOffset;
	void function(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) glCopyTexImage1D;
	void function(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) glCopyTexImage2D;
	void function(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) glCopyTexSubImage1D;
	void function(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) glCopyTexSubImage2D;
	void function(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels) glTexSubImage1D;
	void function(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels) glTexSubImage2D;
	void function(GLenum target, GLuint texture) glBindTexture;
	void function(GLsizei n, GLuint* textures) glDeleteTextures;
	void function(GLsizei n, GLuint* textures) glGenTextures;
	GLboolean function(GLuint texture) glIsTexture;
	//other
	void function(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) glBlendColor;
	void function(GLenum mode) glBlendEquation;
	void function(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices) glDrawRangeElements;
	void function(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels) glTexImage3D;
	void function(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels) glTexSubImage3D;
	void function(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) glCopyTexSubImage3D;
	void function(GLenum texture) glActiveTexture;
	void function(GLclampf value, GLboolean invert) glSampleCoverage;
	void function(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data) glCompressedTexImage3D;
	void function(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data) glCompressedTexImage2D;
	void function(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data) glCompressedTexImage1D;
	void function(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data) glCompressedTexSubImage3D;
	void function(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data) glCompressedTexSubImage2D;
	void function(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data) glCompressedTexSubImage1D;
	void function(GLenum target, GLint level, GLvoid* img) glGetCompressedTexImage;
	void function(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) glBlendFuncSeparate;
	void function(GLenum mode, GLint* first, GLsizei* count, GLsizei primcount) glMultiDrawArrays;
	void function(GLenum mode, GLsizei* count, GLenum type, GLvoid** indices, GLsizei primcount) glMultiDrawElements;
	void function(GLenum pname, GLfloat param) glPointParameterf;
	void function(GLenum pname, GLfloat *params) glPointParameterfv;
	void function(GLenum pname, GLint param) glPointParameteri;
	void function(GLenum pname, GLint* params) glPointParameteriv;
	void function(GLsizei n, GLuint* ids) glGenQueries;
	void function(GLsizei n, GLuint* ids) glDeleteQueries;
	GLboolean function(GLuint id) glIsQuery;
	void function(GLenum target, GLuint id) glBeginQuery;
	void function(GLenum target) glEndQuery;
	void function(GLenum target, GLenum pname, GLint* params) glGetQueryiv;
	void function(GLuint id, GLenum pname, GLint* params) glGetQueryObjectiv;
	void function(GLuint id, GLenum pname, GLuint* params) glGetQueryObjectuiv;
	void function(GLenum target, GLuint buffer) glBindBuffer;
	void function(GLsizei n, GLuint* buffers) glDeleteBuffers;
	void function(GLsizei n, GLuint* buffers) glGenBuffers;
	GLboolean function(GLuint buffer) glIsBuffer;
	void function(GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage) glBufferData;
	void function(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data) glBufferSubData;
	void function(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data) glGetBufferSubData;
	GLvoid* function(GLenum target, GLenum access) glMapBuffer;
	GLboolean function(GLenum target) glUnmapBuffer;
	void function(GLenum target, GLenum pname, GLint* params) glGetBufferParameteriv;
	void function(GLenum target, GLenum pname, GLvoid* *params) glGetBufferPointerv;
	void function(GLenum modeRGB, GLenum modeAlpha) glBlendEquationSeparate;
	void function(GLsizei n, GLenum* bufs) glDrawBuffers;
	void function(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) glStencilOpSeparate;
	void function(GLenum frontfunc, GLenum backfunc, GLint _ref, GLuint mask) glStencilFuncSeparate;
	void function(GLenum face, GLuint mask) glStencilMaskSeparate;
	void function(GLuint program, GLuint shader) glAttachShader;
	void function(GLuint program, GLuint index, GLchar* name) glBindAttribLocation;
	void function(GLuint shader) glCompileShader;
	GLuint function() glCreateProgram;
	GLuint function(GLenum type) glCreateShader;
	void function(GLuint program) glDeleteProgram;
	void function(GLuint shader) glDeleteShader;
	void function(GLuint program, GLuint shader) glDetachShader;
	void function(GLuint index) glDisableVertexAttribArray;
	void function(GLuint index) glEnableVertexAttribArray;
	void function(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name) glGetActiveAttrib;
	void function(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name) glGetActiveUniform;
	void function(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* obj) glGetAttachedShaders;
	GLint function(GLuint program, GLchar* name) glGetAttribLocation;
	void function(GLuint program, GLenum pname, GLint* params) glGetProgramiv;
	void function(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog) glGetProgramInfoLog;
	void function(GLuint shader, GLenum pname, GLint* params) glGetShaderiv;
	void function(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog) glGetShaderInfoLog;
	void function(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source) glGetShaderSource;
	GLint function(GLuint program, GLchar* name) glGetUniformLocation;
	void function(GLuint program, GLint location, GLfloat *params) glGetUniformfv;
	void function(GLuint program, GLint location, GLint* params) glGetUniformiv;
	void function(GLuint index, GLenum pname, GLdouble *params) glGetVertexAttribdv;
	void function(GLuint index, GLenum pname, GLfloat *params) glGetVertexAttribfv;
	void function(GLuint index, GLenum pname, GLint* params) glGetVertexAttribiv;
	void function(GLuint index, GLenum pname, GLvoid* *pointer) glGetVertexAttribPointerv;
	GLboolean function(GLuint program) glIsProgram;
	GLboolean function(GLuint shader) glIsShader;
	void function(GLuint program) glLinkProgram;
	void function(GLuint shader, GLsizei count, GLchar** string, GLint* length) glShaderSource;
	void function(GLuint program) glUseProgram;
	void function(GLint location, GLfloat v0) glUniform1f;
	void function(GLint location, GLfloat v0, GLfloat v1) glUniform2f;
	void function(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) glUniform3f;
	void function(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) glUniform4f;
	void function(GLint location, GLint v0) glUniform1i;
	void function(GLint location, GLint v0, GLint v1) glUniform2i;
	void function(GLint location, GLint v0, GLint v1, GLint v2) glUniform3i;
	void function(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) glUniform4i;
	void function(GLint location, GLsizei count, GLfloat *value) glUniform1fv;
	void function(GLint location, GLsizei count, GLfloat *value) glUniform2fv;
	void function(GLint location, GLsizei count, GLfloat *value) glUniform3fv;
	void function(GLint location, GLsizei count, GLfloat *value) glUniform4fv;
	void function(GLint location, GLsizei count, GLint* value) glUniform1iv;
	void function(GLint location, GLsizei count, GLint* value) glUniform2iv;
	void function(GLint location, GLsizei count, GLint* value) glUniform3iv;
	void function(GLint location, GLsizei count, GLint* value) glUniform4iv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix2fv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix3fv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix4fv;
	void function(GLuint program) glValidateProgram;
	void function(GLuint index, GLdouble x) glVertexAttrib1d;
	void function(GLuint index, GLdouble *v) glVertexAttrib1dv;
	void function(GLuint index, GLfloat x) glVertexAttrib1f;
	void function(GLuint index, GLfloat *v) glVertexAttrib1fv;
	void function(GLuint index, GLshort x) glVertexAttrib1s;
	void function(GLuint index, GLshort *v) glVertexAttrib1sv;
	void function(GLuint index, GLdouble x, GLdouble y) glVertexAttrib2d;
	void function(GLuint index, GLdouble *v) glVertexAttrib2dv;
	void function(GLuint index, GLfloat x, GLfloat y) glVertexAttrib2f;
	void function(GLuint index, GLfloat *v) glVertexAttrib2fv;
	void function(GLuint index, GLshort x, GLshort y) glVertexAttrib2s;
	void function(GLuint index, GLshort *v) glVertexAttrib2sv;
	void function(GLuint index, GLdouble x, GLdouble y, GLdouble z) glVertexAttrib3d;
	void function(GLuint index, GLdouble *v) glVertexAttrib3dv;
	void function(GLuint index, GLfloat x, GLfloat y, GLfloat z) glVertexAttrib3f;
	void function(GLuint index, GLfloat *v) glVertexAttrib3fv;
	void function(GLuint index, GLshort x, GLshort y, GLshort z) glVertexAttrib3s;
	void function(GLuint index, GLshort *v) glVertexAttrib3sv;
	void function(GLuint index, GLbyte* v) glVertexAttrib4Nbv;
	void function(GLuint index, GLint* v) glVertexAttrib4Niv;
	void function(GLuint index, GLshort *v) glVertexAttrib4Nsv;
	void function(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) glVertexAttrib4Nub;
	void function(GLuint index, GLubyte *v) glVertexAttrib4Nubv;
	void function(GLuint index, GLuint* v) glVertexAttrib4Nuiv;
	void function(GLuint index, GLushort *v) glVertexAttrib4Nusv;
	void function(GLuint index, GLbyte* v) glVertexAttrib4bv;
	void function(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) glVertexAttrib4d;
	void function(GLuint index, GLdouble *v) glVertexAttrib4dv;
	void function(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) glVertexAttrib4f;
	void function(GLuint index, GLfloat *v) glVertexAttrib4fv;
	void function(GLuint index, GLint* v) glVertexAttrib4iv;
	void function(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) glVertexAttrib4s;
	void function(GLuint index, GLshort *v) glVertexAttrib4sv;
	void function(GLuint index, GLubyte *v) glVertexAttrib4ubv;
	void function(GLuint index, GLuint* v) glVertexAttrib4uiv;
	void function(GLuint index, GLushort *v) glVertexAttrib4usv;
	void function(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid* pointer) glVertexAttribPointer;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix2x3fv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix3x2fv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix2x4fv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix4x2fv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix3x4fv;
	void function(GLint location, GLsizei count, GLboolean transpose, GLfloat *value) glUniformMatrix4x3fv;
	void function(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) glColorMaski;
	void function(GLenum target, GLuint index, GLboolean *data) glGetBooleani_v;
	void function(GLenum target, GLuint index, GLint* data) glGetIntegeri_v;
	void function(GLenum target, GLuint index) glEnablei;
	void function(GLenum target, GLuint index) glDisablei;
	GLboolean function(GLenum target, GLuint index) glIsEnabledi;
	void function(GLenum primitiveMode) glBeginTransformFeedback;
	void function() glEndTransformFeedback;
	void function(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) glBindBufferRange;
	void function(GLenum target, GLuint index, GLuint buffer) glBindBufferBase;
	void function(GLuint program, GLsizei count, GLchar* *varyings, GLenum bufferMode) glTransformFeedbackVaryings;
	void function(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name) glGetTransformFeedbackVarying;
	void function(GLenum target, GLenum clamp) glClampColor;
	void function(GLuint id, GLenum mode) glBeginConditionalRender;
	void function() glEndConditionalRender;
	void function(GLuint index, GLint size, GLenum type, GLsizei stride, GLvoid* pointer) glVertexAttribIPointer;
	void function(GLuint index, GLenum pname, GLint* params) glGetVertexAttribIiv;
	void function(GLuint index, GLenum pname, GLuint* params) glGetVertexAttribIuiv;
	void function(GLuint index, GLint x) glVertexAttribI1i;
	void function(GLuint index, GLint x, GLint y) glVertexAttribI2i;
	void function(GLuint index, GLint x, GLint y, GLint z) glVertexAttribI3i;
	void function(GLuint index, GLint x, GLint y, GLint z, GLint w) glVertexAttribI4i;
	void function(GLuint index, GLuint x) glVertexAttribI1ui;
	void function(GLuint index, GLuint x, GLuint y) glVertexAttribI2ui;
	void function(GLuint index, GLuint x, GLuint y, GLuint z) glVertexAttribI3ui;
	void function(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) glVertexAttribI4ui;
	void function(GLuint index, GLint* v) glVertexAttribI1iv;
	void function(GLuint index, GLint* v) glVertexAttribI2iv;
	void function(GLuint index, GLint* v) glVertexAttribI3iv;
	void function(GLuint index, GLint* v) glVertexAttribI4iv;
	void function(GLuint index, GLuint* v) glVertexAttribI1uiv;
	void function(GLuint index, GLuint* v) glVertexAttribI2uiv;
	void function(GLuint index, GLuint* v) glVertexAttribI3uiv;
	void function(GLuint index, GLuint* v) glVertexAttribI4uiv;
	void function(GLuint index, GLbyte* v) glVertexAttribI4bv;
	void function(GLuint index, GLshort *v) glVertexAttribI4sv;
	void function(GLuint index, GLubyte *v) glVertexAttribI4ubv;
	void function(GLuint index, GLushort *v) glVertexAttribI4usv;
	void function(GLuint program, GLint location, GLuint* params) glGetUniformuiv;
	void function(GLuint program, GLuint color, GLchar* name) glBindFragDataLocation;
	GLint function(GLuint program, GLchar* name) glGetFragDataLocation;
	void function(GLint location, GLuint v0) glUniform1ui;
	void function(GLint location, GLuint v0, GLuint v1) glUniform2ui;
	void function(GLint location, GLuint v0, GLuint v1, GLuint v2) glUniform3ui;
	void function(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) glUniform4ui;
	void function(GLint location, GLsizei count, GLuint* value) glUniform1uiv;
	void function(GLint location, GLsizei count, GLuint* value) glUniform2uiv;
	void function(GLint location, GLsizei count, GLuint* value) glUniform3uiv;
	void function(GLint location, GLsizei count, GLuint* value) glUniform4uiv;
	void function(GLenum target, GLenum pname, GLint* params) glTexParameterIiv;
	void function(GLenum target, GLenum pname, GLuint* params) glTexParameterIuiv;
	void function(GLenum target, GLenum pname, GLint* params) glGetTexParameterIiv;
	void function(GLenum target, GLenum pname, GLuint* params) glGetTexParameterIuiv;
	void function(GLenum buffer, GLint drawbuffer, GLint* value) glClearBufferiv;
	void function(GLenum buffer, GLint drawbuffer, GLuint* value) glClearBufferuiv;
	void function(GLenum buffer, GLint drawbuffer, GLfloat *value) glClearBufferfv;
	void function(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) glClearBufferfi;
	GLubyte* function(GLenum name, GLuint index) glGetStringi;
	void function(GLenum mode, GLint first, GLsizei count, GLsizei primcount) glDrawArraysInstanced;
	void function(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLsizei primcount) glDrawElementsInstanced;
	void function(GLenum target, GLenum internalformat, GLuint buffer) glTexBuffer;
	void function(GLuint index) glPrimitiveRestartIndex;
	void function(GLenum target, GLuint index, GLint64 *data) glGetInteger64i_v;
	void function(GLenum target, GLenum pname, GLint64 *params) glGetBufferParameteri64v;
	void function(GLuint program, GLenum pname, GLint value) glProgramParameteri;
	void function(GLenum target, GLenum attachment, GLuint texture, GLint level) glFramebufferTexture;
	void function(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face) glFramebufferTextureFace;
	GLboolean function(GLuint renderbuffer) glIsRenderbuffer;
	void function(GLenum target, GLuint renderbuffer) glBindRenderbuffer;
	void function(GLsizei n, GLuint* renderbuffers) glDeleteRenderbuffers;
	void function(GLsizei n, GLuint* renderbuffers) glGenRenderbuffers;
	void function(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) glRenderbufferStorage;
	void function(GLenum target, GLenum pname, GLint* params) glGetRenderbufferParameteriv;
	GLboolean function(GLuint framebuffer) glIsFramebuffer;
	void function(GLenum target, GLuint framebuffer) glBindFramebuffer;
	void function(GLsizei n, GLuint* framebuffers) glDeleteFramebuffers;
	void function(GLsizei n, GLuint* framebuffers) glGenFramebuffers;
	GLenum function(GLenum target) glCheckFramebufferStatus;
	void function(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) glFramebufferTexture1D;
	void function(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) glFramebufferTexture2D;
	void function(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) glFramebufferTexture3D;
	void function(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) glFramebufferRenderbuffer;
	void function(GLenum target, GLenum attachment, GLenum pname, GLint* params) glGetFramebufferAttachmentParameteriv;
	void function(GLenum target) glGenerateMipmap;
	void function(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) glBlitFramebuffer;
	void function(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) glRenderbufferStorageMultisample;
	void function(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) glFramebufferTextureLayer;
	GLvoid* function(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) glMapBufferRange;
	void function(GLenum target, GLintptr offset, GLsizeiptr length) glFlushMappedBufferRange;
	void function(GLuint array) glBindVertexArray;
	void function(GLsizei n, GLuint* arrays) glDeleteVertexArrays;
	void function(GLsizei n, GLuint* arrays) glGenVertexArrays;
	GLboolean function(GLuint array) glIsVertexArray;
	void function(GLuint program, GLsizei uniformCount, GLchar* *uniformNames, GLuint* uniformIndices) glGetUniformIndices;
	void function(GLuint program, GLsizei uniformCount, GLuint* uniformIndices, GLenum pname, GLint* params) glGetActiveUniformsiv;
	void function(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName) glGetActiveUniformName;
	GLuint function(GLuint program, GLchar* uniformBlockName) glGetUniformBlockIndex;
	void function(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params) glGetActiveUniformBlockiv;
	void function(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName) glGetActiveUniformBlockName;
	void function(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) glUniformBlockBinding;
	void function(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) glCopyBufferSubData;
	void function(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLint basevertex) glDrawElementsBaseVertex;
	void function(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices, GLint basevertex) glDrawRangeElementsBaseVertex;
	void function(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLsizei primcount, GLint basevertex) glDrawElementsInstancedBaseVertex;
	void function(GLenum mode, GLsizei* count, GLenum type, GLvoid* *indices, GLsizei primcount, GLint* basevertex) glMultiDrawElementsBaseVertex;
	void function(GLenum mode) glProvokingVertex;
	GLsync function(GLenum condition, GLbitfield flags) glFenceSync;
	GLboolean function(GLsync sync) glIsSync;
	void function(GLsync sync) glDeleteSync;
	GLenum function(GLsync sync, GLbitfield flags, GLuint64 timeout) glClientWaitSync;
	void function(GLsync sync, GLbitfield flags, GLuint64 timeout) glWaitSync;
	void function(GLenum pname, GLint64* params) glGetInteger64v;
	void function(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values) glGetSynciv;
	void function(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) glTexImage2DMultisample;
	void function(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) glTexImage3DMultisample;
	void function(GLenum pname, GLuint index, GLfloat *val) glGetMultisamplefv;
	void function(GLuint index, GLbitfield mask) glSampleMaski;
	void function(GLuint buf, GLenum mode) glBlendEquationi;
	void function(GLuint buf, GLenum modeRGB, GLenum modeAlpha) glBlendEquationSeparatei;
	void function(GLuint buf, GLenum src, GLenum dst) glBlendFunci;
	void function(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) glBlendFuncSeparatei;
	void function(GLclampf value) glMinSampleShading;
}